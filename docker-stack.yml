version: '3.8'

services:
  file_server:
    image: nginx:1.19-alpine
    volumes:
      - ./nginx:/etc/nginx:ro
      - 'storage:/media/data'
    networks:
      proxy:
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.services.${SATNAME}_files.loadbalancer.server.port=80'
        - 'traefik.http.routers.${SATNAME}_files.rule=Host(`${SATNAME}.${DOMAIN}`)'
        - 'traefik.http.routers.${SATNAME}_files.entrypoints=websecure'
        - 'traefik.http.routers.${SATNAME}_files.tls.certresolver=le'

  app_server:
    image: 'satellitebaas/core-server'
    environment:
      - API_KEY=${APIKEY}
    volumes:
      - 'storage:/media/data'
    networks:
      proxy:
      backend:
        aliases:
          - app_${SATNAME}
      stack:
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.services.${SATNAME}_app.loadbalancer.server.port=3000'
        - 'traefik.http.routers.${SATNAME}_app.rule=Host(`${SATNAME}.${DOMAIN}`) && PathPrefix(`/graphql`)'
        - 'traefik.http.routers.${SATNAME}_app.entrypoints=websecure'
        - 'traefik.http.routers.${SATNAME}_app.tls.certresolver=le'
        - 'traefik.http.routers.${SATNAME}_app.middlewares=corsHeaders'
        - 'traefik.http.middlewares.corsHeaders.headers.accessControlAllowMethods=GET,OPTIONS,PUT'
        - 'traefik.http.middlewares.corsHeaders.headers.accessControlAllowOrigin=*'
        - 'traefik.http.middlewares.corsHeaders.headers.accessControlAllowHeaders=*'

  alpha:
    image: dgraph/dgraph:latest
    volumes:
      - dgraph_data:/dgraph
    networks:
      backend:
        aliases:
          - alpha_${SATNAME}
      stack:
    command: dgraph alpha --my=alpha:7080 --zero=zero:5080 --graphql_extensions=false --whitelist 0.0.0.0/0

  zero:
    image: dgraph/dgraph:latest
    volumes:
      - dgraph_data:/dgraph
    networks:
      stack:
    command: dgraph zero --my=zero:5080

volumes:
  dgraph_data:
  storage:

networks:
  stack:
  backend:
    external: true
  proxy:
    external: true
